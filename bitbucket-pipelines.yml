pipelines:
  # default:
  # - step:
  #     name: Integration test
  #     image: node:16
  #     size: 2x # Double resources available for this step.
  #     script:
  #       - apt-get update
  #       - node --version
  #       - npm install --no-audit
  #       - npm run test
  branches:
    testnet:
      - step:
          name: Integration test
          image: node:16
          size: 2x # Double resources available for this step.
          script:
            - apt-get update
            - node --version
            - npm install --no-audit
            #- npm run test
          artifacts:
            - node_modules/**
      - step:
          name: Build
          image: node:16
          size: 2x # Double resources available for this step.
          script:
            - apt-get update
            # Print Node.js version
            - node --version
            # Print npm version
            - npm --version
            # RPC config
            - cp -p ./src/Assets/networks/rpc_config_testnet.json ./src/Assets/networks/rpc_config.json
            # Build frontend
            - CI=false npm run build
          artifacts:
            - build/**
      - step:
          name: Deploy
          image: amazon/aws-cli
          deployment: Testnet
          script:
            - ([[ "$BITBUCKET_BRANCH" == "testnet" ]]) || (echo "This build should only be run on testnet" && exit 1)
            # Print AWS CLI version
            - aws --version
            # Deployment
            - aws s3 sync build/ s3://${S3_BUCKET} --delete
            - aws cloudfront create-invalidation --distribution-id ${CF_DIST_ID} --paths "/404.html" "/asset-manifest.json" "/index.html" "/manifest.json" "/robots.txt" "/static/*" "/tos.html" "/vector*"
    dev:
      - step:
          name: Integration test
          image: node:16
          size: 2x # Double resources available for this step.
          script:
            - apt-get update
            - node --version
            - npm install --no-audit
            #- npm run test
          artifacts:
            - node_modules/**
      - step:
          name: Build
          image: node:16
          size: 2x # Double resources available for this step.
          script:
            - apt-get update
            # Print Node.js version
            - node --version
            # Print npm version
            - npm --version
            # RPC config
            - cp -p ./src/Assets/networks/rpc_config_dev.json ./src/Assets/networks/rpc_config.json
            # Build frontend
            - CI=false npm run build
          artifacts:
            - build/**
      - step:
          name: Deploy
          image: amazon/aws-cli
          deployment: Development
          script:
            - ([[ "$BITBUCKET_BRANCH" == "dev" ]]) || (echo "This build should only be run on dev" && exit 1)
            # Print AWS CLI version
            - aws --version
            # Deployment
            - aws s3 sync build/ s3://${S3_BUCKET} --delete
            - aws cloudfront create-invalidation --distribution-id ${CF_DIST_ID} --paths "/404.html" "/asset-manifest.json" "/index.html" "/manifest.json" "/robots.txt" "/static/*" "/tos.html" "/vector*"
    prod:
      - step:
          name: Integration test
          image: node:16
          size: 2x # Double resources available for this step.
          script:
            - apt-get update
            - node --version
            - npm install --no-audit
            #- npm run test
          artifacts:
            - node_modules/**
      - step:
          name: Build
          image: node:16
          size: 2x # Double resources available for this step.
          script:
            - apt-get update
            # Print Node.js version
            - node --version
            # Print npm version
            - npm --version
            # Build frontend
            - CI=false npm run build
          artifacts:
            - build/**
      - step:
          name: Deploy
          image: amazon/aws-cli
          deployment: Production
          script:
            - ([[ "$BITBUCKET_BRANCH" == "prod" ]]) || (echo "This build should only be run on prod" && exit 1)
            # Print AWS CLI version
            - aws --version
            # Deployment
            - aws s3 sync build/ s3://${S3_BUCKET} --delete
            - aws cloudfront create-invalidation --distribution-id ${CF_DIST_ID} --paths "/404.html" "/asset-manifest.json" "/index.html" "/manifest.json" "/robots.txt" "/static/*" "/tos.html" "/vector*"
